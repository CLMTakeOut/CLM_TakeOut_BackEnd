<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CollectionMapper">
    
    <resultMap type="Favorite" id="CollectionResult">
        <result property="collectionId"    column="collection_id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="goodsId"    column="goods_id"    />
    </resultMap>

    <sql id="selectCollectionVo">
        select collection_id, customer_id, goods_id from collection
    </sql>

    <select id="selectCollectionList" parameterType="Collection" resultMap="CollectionResult">
        <include refid="selectCollectionVo"/>
        <where>  
            <if test="customerId != null "> and customer_id = #{customerId}</if>
            <if test="goodsId != null "> and goods_id = #{goodsId}</if>
        </where>
    </select>
    
    <select id="selectCollectionById" parameterType="Integer" resultMap="CollectionResult">
        <include refid="selectCollectionVo"/>
        where collection_id = #{collectionId}
    </select>
        
    <insert id="insertCollection" parameterType="Collection" useGeneratedKeys="true" keyProperty="collectionId">
        insert into collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">customer_id,</if>
            <if test="goodsId != null">goods_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">#{customerId},</if>
            <if test="goodsId != null">#{goodsId},</if>
         </trim>
    </insert>

    <update id="updateCollection" parameterType="Collection">
        update collection
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="goodsId != null">goods_id = #{goodsId},</if>
        </trim>
        where collection_id = #{collectionId}
    </update>

    <delete id="deleteCollectionById" parameterType="Integer">
        delete from collection where collection_id = #{collectionId}
    </delete>

    <delete id="deleteCollectionByIds" parameterType="String">
        delete from collection where collection_id in 
        <foreach item="collectionId" collection="array" open="(" separator="," close=")">
            #{collectionId}
        </foreach>
    </delete>
</mapper>