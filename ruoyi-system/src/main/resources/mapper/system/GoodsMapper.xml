<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.GoodsMapper">
    
    <resultMap type="Goods" id="GoodsResult">
        <result property="goodsId"    column="goods_id"    />
        <result property="shopId"    column="shop_id"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="price"    column="price"    />
        <result property="salesVolume"    column="salesVolume"    />
        <result property="score"    column="score"    />
        <result property="goodsDescribe"    column="goods_describe"    />
        <result property="goodsLogo"    column="goods_logo"    />
        <result property="goodsRecommend"    column="goods_recommend"    />
    </resultMap>

    <sql id="selectGoodsVo">
        select goods_id, shop_id, goods_name, price, salesVolume, score, goods_describe, goods_logo, goods_recommend from goods
    </sql>

    <select id="selectGoodsList" parameterType="Goods" resultMap="GoodsResult">
        <include refid="selectGoodsVo"/>
        <where>  
            <if test="shopId != null "> and shop_id = #{shopId}</if>
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat('%', #{goodsName}, '%')</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="salesVolume != null "> and salesVolume = #{salesVolume}</if>
            <if test="score != null "> and score = #{score}</if>
            <if test="goodsDescribe != null  and goodsDescribe != ''"> and goods_describe = #{goodsDescribe}</if>
            <if test="goodsLogo != null  and goodsLogo != ''"> and goods_logo = #{goodsLogo}</if>
            <if test="goodsRecommend != null  and goodsRecommend != ''"> and goods_recommend = #{goodsRecommend}</if>
        </where>
    </select>
    
    <select id="selectGoodsById" parameterType="Integer" resultMap="GoodsResult">
        <include refid="selectGoodsVo"/>
        where goods_id = #{goodsId}
    </select>
        
    <insert id="insertGoods" parameterType="Goods" useGeneratedKeys="true" keyProperty="goodsId">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="shopId != null">shop_id,</if>
            <if test="goodsName != null">goods_name,</if>
            <if test="price != null">price,</if>
            <if test="salesVolume != null">salesVolume,</if>
            <if test="score != null">score,</if>
            <if test="goodsDescribe != null">goods_describe,</if>
            <if test="goodsLogo != null">goods_logo,</if>
            <if test="goodsRecommend != null">goods_recommend,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="shopId != null">#{shopId},</if>
            <if test="goodsName != null">#{goodsName},</if>
            <if test="price != null">#{price},</if>
            <if test="salesVolume != null">#{salesVolume},</if>
            <if test="score != null">#{score},</if>
            <if test="goodsDescribe != null">#{goodsDescribe},</if>
            <if test="goodsLogo != null">#{goodsLogo},</if>
            <if test="goodsRecommend != null">#{goodsRecommend},</if>
         </trim>
    </insert>

    <update id="updateGoods" parameterType="Goods">
        update goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="shopId != null">shop_id = #{shopId},</if>
            <if test="goodsName != null">goods_name = #{goodsName},</if>
            <if test="price != null">price = #{price},</if>
            <if test="salesVolume != null">salesVolume = #{salesVolume},</if>
            <if test="score != null">score = #{score},</if>
            <if test="goodsDescribe != null">goods_describe = #{goodsDescribe},</if>
            <if test="goodsLogo != null">goods_logo = #{goodsLogo},</if>
            <if test="goodsRecommend != null">goods_recommend = #{goodsRecommend},</if>
        </trim>
        where goods_id = #{goodsId}
    </update>

    <delete id="deleteGoodsById" parameterType="Integer">
        delete from goods where goods_id = #{goodsId}
    </delete>

    <delete id="deleteGoodsByIds" parameterType="String">
        delete from goods where goods_id in 
        <foreach item="goodsId" collection="array" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </delete>
</mapper>